{# base.njk - UPDATED #}
{# Import macros #}
{% from "components/navigation-enhancements.njk" import navigationEnhancements %}
{% from "components/breadcrumb.njk" import breadcrumb %}
{% from "components/analytics.njk" import googleAnalytics %}
{% from "head-meta.njk" import faviconMeta %}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% if title %}{{ title }}{% else %}Travelling Trails{% endif %}</title>

    {{ faviconMeta() }}

    {% if site.analyticsId and site.url == "https://travellingtrails.in" %}
      {{ googleAnalytics(site.analyticsId) }}
    {% endif %}

    <!-- Add this before your search.js script -->
    <script src="https://unpkg.com/lunr/lunr.js"></script>

    <!-- Dark mode detection script - Must be at the top -->
    <script>
      // Immediately set the correct theme before page renders
      (function() {
        // Check for saved theme preference
        const savedTheme = localStorage.getItem('color-theme');
        
        // Default to light mode
        let darkMode = false;
        
        // If we have a saved theme, use it
        if (savedTheme === 'dark') {
          darkMode = true;
        } else if (savedTheme === 'light') {
          darkMode = false;
        } else {
          // Otherwise check system preference
          darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
        }
        
        // Apply theme immediately to prevent flash
        if (darkMode) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      })();
    </script>

    <script>
      // Store the full site URL for JavaScript
      window.siteBaseUrl = "{{ site.url }}";
    </script>

    <!--  <link rel="stylesheet" href="{{ '/styles/main.css' | url }}"> -->
        <!-- With Tailwind CDN -->
        <script src="https://cdn.tailwindcss.com"></script>
        <script>
          tailwind.config = {
            darkMode: 'class',
            theme: {
              extend: {
                colors: {
                  'travel': {
                    50: '#f0f9ff',
                    100: '#e0f2fe',
                    200: '#bae6fd',
                    300: '#7dd3fc',
                    400: '#38bdf8',
                    500: '#0ea5e9',
                    600: '#0284c7',
                    700: '#0369a1',
                    800: '#075985',
                    900: '#0c4a6e',
                    950: '#082f49'
                  }
                }
              }
            },
            plugins: []
          }
        </script>
        
        <!-- Add critical custom components -->
        <style type="text/tailwindcss">
          @layer components {
            /* Layout Components */
            .container { @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 }
            
            /* Navigation Components */
            .nav-link { @apply text-travel-700 dark:text-gray-300 hover:text-travel-900 dark:hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 }
            
            /* Footer Components */
            .footer { @apply bg-gray-800 dark:bg-gray-900 text-white py-12 }
            .footer-link { @apply text-gray-300 dark:text-gray-400 hover:text-white dark:hover:text-white transition-colors duration-200 }
            
            /* Blog Card Components */
            .blog-card { @apply bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 }
            .blog-card h2 a { @apply text-gray-900 dark:text-white text-xl font-semibold hover:text-travel-700 dark:hover:text-travel-500 block }
            .blog-card h3 a { @apply text-gray-900 dark:text-white text-xl font-semibold hover:text-travel-700 dark:hover:text-travel-500 }
            .blog-card p { @apply text-gray-700 dark:text-gray-300 }
            .blog-card time, .blog-card span { @apply text-gray-600 dark:text-gray-400 }
            
            /* Add other most-used components as needed */
          }
          
          @layer utilities {
            .text-shadow { text-shadow: 2px 2px 4px rgba(0,0,0,0.1) }
            .aspect-3-2 { aspect-ratio: 3/2 }
          }
          
          @layer base {
            .dark { @apply bg-gray-900; color-scheme: dark }
          }
        </style>
        
        {% if featuredImage %}
        <link rel="preload" as="image" href="{{ featuredImage | url }}">
        <meta property="og:image" content="{{ featuredImage | url }}">
        <meta name="twitter:image" content="{{ featuredImage | url }}">
        <meta name="twitter:card" content="summary_large_image">
        {% endif %}

        <!-- Structured Data -->
        {% if page.data.destination %}
          {% from "components/travel-schema.njk" import touristDestinationSchema %}
          {{ touristDestinationSchema(
            title=title,
            description=description | default(site.description),
            url=page.url,
            image=featuredImage
          ) }}
        {% endif %}
        
        <style>
        @media (min-width: 640px) {
            .gallery-grid {
                grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
            }
        }
        </style>


         <!-- Add these styles for article and gallery formatting -->
    <style>
        .prose {
          max-width: none;
          line-height: 1.7;
        }
        
        .prose p {
          margin-top: 1.25em;
          margin-bottom: 1.25em;
        }
        
        .prose h2 {
          margin-top: 2em;
          margin-bottom: 1em;
          font-size: 1.5em;
          font-weight: 700;
        }
        
        .prose h3 {
          margin-top: 1.6em;
          margin-bottom: 0.6em;
          font-size: 1.25em;
          font-weight: 600;
        }
        
        .prose ul {
          margin-top: 1.25em;
          margin-bottom: 1.25em;
          list-style-type: disc;
          padding-left: 1.625em;
        }
        
        .prose ol {
          margin-top: 1.25em;
          margin-bottom: 1.25em;
          list-style-type: decimal;
          padding-left: 1.625em;
        }
        
        .prose a {
          color: #0369a1;
          text-decoration: underline;
          font-weight: 500;
        }
        
        .prose img {
          margin-top: 2rem;
          margin-bottom: 2rem;
          border-radius: 0.5rem;
        }
        
        .prose figure {
          margin: 2rem 0;
        }
        
        .gallery-grid {
          display: grid;
          grid-template-columns: repeat(1, minmax(0, 1fr));
          gap: 1.5rem;
          width: 100%;
          padding: 1rem;
        }
        
        @media (min-width: 640px) {
          .gallery-grid {
            grid-template-columns: repeat(2, minmax(0, 1fr));
          }
        }
        
        .gallery-item {
          position: relative;
          overflow: hidden;
          border-radius: 0.5rem;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
          height: 300px;
        }
        
        .gallery-image-wrapper {
          height: 100%;
          width: 100%;
          overflow: hidden;
        }
        
        .gallery-image {
          width: 100%;
          height: 100%;
          object-fit: cover;
          transition: transform 0.3s;
        }
        
        .gallery-image:hover {
          transform: scale(1.05);
        }
      </style>


      <!-- Complete fix for image captions and backgrounds -->
      <style>
        /* Reset all gallery items and make them truly transparent */
        .gallery-item,
        .gallery-item figcaption,
        figure.gallery-item,
        figure.gallery-item figcaption {
          background-color: transparent !important;
          background: none !important;
          box-shadow: none !important;
          border: none !important;
        }
        
        /* Fix gallery items structure */
        .gallery-item, 
        figure.gallery-item {
          position: relative !important;
          overflow: visible !important;
          border-radius: 0 !important;
          height: auto !important;
          display: flex !important;
          flex-direction: column !important;
        }
        
        /* Apply shadow only to the image wrapper */
        .gallery-image-wrapper {
          height: 250px !important;
          width: 100% !important;
          overflow: hidden !important;
          border-radius: 0.5rem !important;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
        }
        
        /* Fix gallery captions */
        .gallery-item figcaption,
        figure.gallery-item figcaption {
          position: static !important;
          display: block !important;
          height: auto !important;
          width: 100% !important;
          overflow: visible !important;
          color: #4b5563 !important;
          padding: 0.75rem 0 !important;
          margin-top: 0.5rem !important;
          text-align: center !important;
        }
        
        /* Dark mode caption colors */
        .dark .gallery-item figcaption,
        .dark figure.gallery-item figcaption {
          color: #d1d5db !important;
        }
        
        /* Fix blog post single images */
        .prose img {
          border-radius: 0.5rem !important;
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
          display: block !important;
          margin: 2rem auto !important;
        }
        
        /* Fix single image captions */
        .single-image {
          margin: 2rem 0 !important;
          background: none !important;
        }
        
        .single-image .image-container {
          position: relative !important;
          overflow: hidden !important;
          border-radius: 0.5rem !important; 
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1) !important;
          background: none !important;
        }
        
        .single-image figcaption {
          margin-top: 0.5rem !important;
          font-size: 0.875rem !important;
          color: #4B5563 !important; 
          text-align: center !important;
          background: transparent !important;
          background-color: transparent !important;
          padding: 0.5rem 0 !important;
          border: none !important;
          box-shadow: none !important;
          display: block !important;
          position: static !important;
          overflow: visible !important;
        }
        
        .dark .single-image figcaption {
          color: #d1d5db !important;
        }
        
        /* Clean up any overflow issues */
        .gallery-grid {
          overflow: visible !important;
        }
      </style>

</head>
<body class="min-h-screen bg-gray-50 dark:bg-gray-900 dark:text-gray-100">
    {# Add navigation enhancements at the start of body #}
    {{ navigationEnhancements() }}
    
    {% include "header.njk" %}

    <!-- Add breadcrumb after header -->
    {% if page.url !== "/" and page.url !== "/about/" and page.url !== "/contact/" %}
    <div class="container mx-auto">
        {{ breadcrumb(page, title, category.title) }}
    </div>
    {% endif %}

    <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {{ content | safe }}
    </main>

    {% include "footer.njk" %}

    <!-- Scripts -->
    <script src="{{ '/assets/js/main.js' | url }}"></script>
    <script src="{{ '/assets/js/navigation.js' | url }}"></script>
    <script src="{{ '/assets/js/search.js' | url }}"></script>
    

    <!-- Image optimization script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add lazy loading
            document.querySelectorAll('img:not([loading])').forEach(img => {
                img.setAttribute('loading', 'lazy');
            });
            
            // Add async decoding
            document.querySelectorAll('img:not([decoding])').forEach(img => {
                img.setAttribute('decoding', 'async');
            });
            
            // Improved error handling
            document.querySelectorAll('img').forEach(img => {
                img.addEventListener('error', function() {
                    if (!this.src.includes('placeholder.jpg')) { // Prevent infinite loop
                        this.src = '/assets/images/placeholder.jpg';
                        this.alt = 'Image not available';
                        this.onerror = null; // Prevent further error events
                    }
                });
            });
        });
    </script>

    <!-- Dark mode image handling -->
    <script>
        function adjustImageBrightness() {
            if (document.documentElement.classList.contains('dark')) {
                document.querySelectorAll('img:not(.no-dark-adjust)').forEach(img => {
                    img.style.filter = 'brightness(0.8)';
                });
            } else {
                document.querySelectorAll('img').forEach(img => {
                    img.style.filter = '';
                });
            }
        }

        document.addEventListener('DOMContentLoaded', adjustImageBrightness);
        const darkModeObserver = new MutationObserver(adjustImageBrightness);
        darkModeObserver.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ['class']
        });
    </script>

  <!-- Add this just before the closing body tag -->
  {% if page.url.includes("/blog/") and not page.url.endsWith("/blog/") %}
  <script src="{{ '/assets/js/analytics-enhancement.js' | url }}"></script>
  {% endif %}  

  <script src="{{ '/assets/js/logo-switcher.js' | url }}"></script>


    <!-- Add this right before the closing </body> tag in your base.njk template -->
    <!-- Only add this script on the main site, not in the admin section -->
    {% if page.url != "/admin/" and site.url == "https://travellingtrails.in" %}
    <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
    <script>
      if (window.netlifyIdentity) {
        window.netlifyIdentity.on("init", user => {
          if (!user) {
            window.netlifyIdentity.on("login", () => {
              document.location.href = "/admin/";
            });
          }
        });
      }
    </script>
    {% endif %}


  {% from "components/cookie-consent.njk" import cookieConsent %}
  {{ cookieConsent() }}
</body>
</html>